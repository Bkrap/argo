(()=>{var __webpack_modules__={"./src/js/parseExternalNews/parseExternalNews.js":
/*!*******************************************************!*\
  !*** ./src/js/parseExternalNews/parseExternalNews.js ***!
  \*******************************************************/()=>{eval("// const { Readability } = require('@mozilla/readability');\r\n\r\n// document.addEventListener('DOMContentLoaded', function() {\r\n\r\n//   let finalResults = [];\r\n\r\n//   // Build the URL we are going to request. This will get articles related to Apple and sort them newest first\r\n//   let url = 'https://newsapi.org/v2/everything?' +\r\n//     'q=Apple&' +\r\n//     'sortBy=publishedAt&' +\r\n//     'pageSize=30&' +\r\n//     'apiKey=0c93dc142cf744cea900b931f03e047b';\r\n\r\n//   // Make the request with jQuery's ajax() function\r\n//   jQuery.ajax({\r\n//     url: url,\r\n//     method: \"GET\",\r\n//   }).then(function(r1) {\r\n//     let results = r1.articles;\r\n\r\n//     // Create an array of AJAX promises for individual article requests\r\n//     let promises = results.map(function(result) {\r\n//       return jQuery.ajax({\r\n//         url: result.url,\r\n//         method: \"GET\"\r\n//       }).then(function(r2) {\r\n//         // We now have the article HTML, create a jQuery object from it\r\n//         let $article = jQuery(r2);\r\n\r\n//         // Create a DOM document from the HTML string\r\n//         const domParser = new DOMParser();\r\n//         const doc = domParser.parseFromString(r2, 'text/html');\r\n\r\n//         // Use jQuery to locate the article content\r\n//         let articleContent = new Readability(doc).parse();\r\n\r\n//         finalResults.push({\r\n//             description     : result.description,\r\n//             publishedAt     : result.publishedAt,\r\n//             title           : result.title,\r\n//             url             : result.url,\r\n//             urlToImage      : result.urlToImage,\r\n//             content         : articleContent.textContent,\r\n//           });\r\n\r\n//       }).catch(function(error) {\r\n//         if (error.status === 403) {\r\n//           console.log('Skipped article due to 403 error:', result.url);\r\n//         } else {\r\n//           console.log('Error fetching article:', error);\r\n//         }\r\n//         // Return a resolved promise to skip the error and continue with the next article\r\n//         return Promise.resolve();\r\n//       });\r\n//     });\r\n\r\n//     // Wait for all promises to resolve\r\n//     return Promise.all(promises);\r\n\r\n//   }).then(function() {\r\n//     console.log(finalResults);\r\n\r\n//     var formData = {\r\n//       action: 'parse_external_news_api',\r\n//       finalResults: finalResults,\r\n//     };\r\n\r\n//     // Push that bitch to ajax PHP\r\n//     jQuery.ajax({\r\n//       type: 'POST',\r\n//       url: generic_ajax_object.ajax_url,\r\n//       data: formData,\r\n//       success: function(data) {\r\n//         jQuery(document)\r\n//           .ajaxStart(function () {\r\n//             //ajax request went so show the loading image\r\n//             // loadingWheel.show();\r\n//           })\r\n//           .ajaxStop(function () {\r\n//             //got response so hide the loading image\r\n//             //    loadingWheel.hide();\r\n//           });\r\n//       },\r\n//       error: function(request, status, error) {\r\n//         console.log(request);\r\n//         console.log(error);\r\n//         alert(status);\r\n//       }\r\n//     });\r\n\r\n//   }).catch(function(error) {\r\n//     console.log('Error fetching articles:', error);\r\n//   });\r\n\r\n// });\n\n//# sourceURL=webpack://webpack/./src/js/parseExternalNews/parseExternalNews.js?")}},__webpack_exports__={};__webpack_modules__["./src/js/parseExternalNews/parseExternalNews.js"]()})();